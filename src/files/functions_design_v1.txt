----------------------------------------------

LABEL _substr
	
	CREATEFRAME
	PUSHFRAME
	DEFVAR LF@string
	POPS LF@string
	DEFVAR LF@n
	POPS LF@n
	DEFVAR LF@m
	POPS LF@m
	DEFVAR LF@temp1
	TYPE LF@temp1 LF@string
	JUMPIFEQ LF@_str_error string@nil LF@temp1
	TYPE LF@temp1 LF@n
	JUMPIFEQ LF@_str_error string@nil LF@temp1
	TYPE LF@temp1 LF@m
	JUMPIFEQ LF@_str_error string@nil LF@temp1
	DEFVAR LF@check
	DEFVAR LF@len
	STRLEN LF@len LF@string
	LT LF@check LF@n int@1
	JUMPIFEQ LF@_str_empty LF@check bool@true
	LT LF@check LF@m int@1
	JUMPIFEQ LF@_str_empty LF@check bool@true
	GT LF@check LF@n LF@len
	JUMPIFEQ LF@_str_empty LF@check bool@true
	GT LF@check LF@m LF@len
	JUMPIFEQ LF@_str_empty LF@check bool@true
	GT LF@check LF@n LF@m
	JUMPIFEQ LF@_str_empty LF@check bool@true
	MOVE LF@len LF@n
	SUB LF@len int@1
	
LABEL _str_loop
	GETCHAR LF@temp LF@string LF@len
	CONCAT LF@s LF@s LF@temp
	ADD LF@len int@1
	JUMPIFEQ _str_push LF@temp LF@m
	JUMP _str_loop

LABEL _str_error
	EXIT int@8
	JUMP _str_end
	
LABEL _str_empty
	MOVE LF@s string@\000
	
LABEL _str_push
	PUSHS LF@s

LABEL _str_end
	POPFRAME
	RETURN

----------------------------------------------

LABEL _write

	CREATEFRAME
	PUSHFRAME

	DEFVAR LF@n
	POPS LF@n
	DEFVAR LF@term
	
LABEL _write_loop	
	POPS LF@term
	WRITE LF@term
	SUB LF@n int@1
	JUMPIFNEQ _write_loop LF@n int@0

	POPFRAME
	RETURN
	
----------------------------------------------	

write(t0, t1, ... , tn-1) -> 
	// n = pocet termov na vypis
	for (int i = n-1; i >= 0; i--) {
		PUSHS LF@t[i]
	}
	PUSHS LF@n
	CALL _write


s = reads() -> READ LF@s string
i = readi() -> READ LF@i int
n = readn() -> READ LF@n float

i = tointeger(n) -> FLOAT2INT LF@i LF@n // var = integer, symb = number
i = ord(string, int) -> STRI2INT LF@i GF@string LF@int
s = chr(i) -> INT2CHAR LF@string LF@int

s = substr(string, n ,m) ->
	PUSHS LF@m
	PUSHS LF@n
	PUSHS LF@string
	CALL LF@_substr
	POPS LF@s